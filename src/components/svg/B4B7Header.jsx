import RectRenderer from "../../utils/RectRenderer";
import CircleRenderer from "../../utils/CircleRenderer";
import PathConfigs from "../../config/PathConfigs";
import CircleConfigs from "../../config/CircleConfigs";
import RectConfigs from "../../config/RectConfigs";
import { getColors } from "../../config/colorConfig";

/**
 * üîµ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —à–∞–ø–∫–∏ –¥–ª—è —Ç–∞–±–ª–∏—á–æ–∫ B4/B7:
 * –º–∞–ª—é—î –≤–µ—Ä—Ö–Ω—ñ–π —Ñ–æ–Ω –∑ –∑–∞–æ–∫—Ä—É–≥–ª–µ–Ω–Ω—è–º, —ñ–∫–æ–Ω–∫—É –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞, –º–∞—Ä—à—Ä—É—Ç–Ω–∏–π –±–µ–π–¥–∂ —Ç–∞ –Ω–æ–º–µ—Ä –º–∞—Ä—à—Ä—É—Ç—É.
 */
function B4B7Header({ params }) {
  // === [1] –ö–û–õ–¨–û–†–ò –ó –¢–ê–ë–õ–ò–ß–ö–ò ===
  // –û—Ç—Ä–∏–º—É—î–º–æ –∫–æ–ª—å–æ—Ä–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ —Ç–∏–ø—É —Ç–∞–±–ª–∏—Ü—ñ, —Ç–∏–ø—É –Ω–æ–º–µ—Ä–∞ –º–∞—Ä—à—Ä—É—Ç—É —Ç–∞ —á–∏ —Ü–µ –∫—ñ–Ω—Ü–µ–≤–∞ —Ç–æ—á–∫–∞
  const colors = getColors(params.tableType, params.numberType);

  // === [2] –í–ò–ë–Ü–† –§–û–†–ú–ò –î–õ–Ø –ë–ï–ô–î–ñ–ê ===
  // –î–ª—è –Ω–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç—É ‚Äî –∫—Ä—É–≥, —ñ–Ω–∞–∫—à–µ ‚Äî –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ü–∏—Ñ—Ä
  const circleBadge = CircleConfigs["E5B4"];

  const isDoubleDigit = +params.routeNumber >= 10;

  const rectBadge = isDoubleDigit
    ? RectConfigs["E4B4"]
    : RectConfigs["E3B4"];

  // === [3] –ú–ê–°–®–¢–ê–ë –Ü–ö–û–ù–ö–ò –í–ï–õ–û–°–ò–ü–ï–î–ê ===
  // –ú–∞—Å—à—Ç–∞–±—É—î–º–æ –≤–µ–ª–æ—Å–∏–ø–µ–¥ –¥–æ –≤–∏—Å–æ—Ç–∏ 86
  const bicycleScale = 86 / PathConfigs.bicycle.height;

  // === [4] –®–ò–†–ò–ù–ê –ë–ï–ô–î–ñ–ê ===
  // –Ø–∫—â–æ –Ω–µ–º–∞—î —Ç–∏–ø—É ‚Äî 0, —ñ–Ω–∞–∫—à–µ –≤–∏–±–∏—Ä–∞—î–º–æ –ø–æ —Ç–∏–ø—É: –∫—Ä—É–≥ –∞–±–æ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫
  const badgeWidth =
    params.numberType === "none"
      ? 0
      : params.numberType === "national"
      ? circleBadge.outerRadius * 2
      : rectBadge.outerWidth;

  // === [5] –ì–û–†–ò–ó–û–ù–¢–ê–õ–¨–ù–ï –í–ò–†–Ü–í–ù–Æ–í–ê–ù–ù–Ø –í–°–¨–û–ì–û –ì–†–£–ü–û–í–û–ì–û –ë–õ–û–ö–£ ===
  // –¶–µ–Ω—Ç—Ä—É—î–º–æ –≤–µ–ª–æ—Å–∏–ø–µ–¥ + –±–µ–π–¥–∂ —É –º–µ–∂–∞—Ö —à–∏—Ä–∏–Ω–∏ 600 (—Ç–æ–±—Ç–æ –ø–æ 300)
  const groupX =
    300 -
    (
      PathConfigs.bicycle.width * bicycleScale +
      (params.numberType !== "none" ? 30 + badgeWidth : 0)
    ) / 2;

  // === [6] –†–ï–ù–î–ï–† –®–ê–ü–ö–ò ===
  return (
    <>
      {/* === [6.1] –í–µ—Ä—Ö–Ω—ñ–π –∑–∞–æ–∫—Ä—É–≥–ª–µ–Ω–∏–π –±–ª–æ–∫ === */}
      {/* –ú–∞–ª—é—î—Ç—å—Å—è —É –¥–≤–∞ —à–∞—Ä–∏: –∑–æ–≤–Ω—ñ—à–Ω—ñ–π —ñ –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ–π */}
      <path
        d={PathConfigs.topRoundedOuterRect.d}
        fill={colors.frameColor}
      />
      <path
        d={PathConfigs.topRoundedInnerRect.d}
        fill={colors.backgroundColor}
      />

      {/* === [6.2] –Ü–∫–æ–Ω–∫–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞ + –º–∞—Ä—à—Ä—É—Ç–Ω–∏–π –±–µ–π–¥–∂ === */}
      <g transform={`translate(${groupX}, 5)`}>
        {/* –Ü–∫–æ–Ω–∫–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞ */}
        <path
          d={PathConfigs.bicycle.d}
          fill={colors.symbolColor}
          fillRule="evenodd"
          transform={`translate(0, ${
            100 - (PathConfigs.bicycle.height * bicycleScale) / 2
          }) scale(${bicycleScale})`}
        />

        {/* –Ø–∫—â–æ –∑–∞–¥–∞–Ω–æ —Ç–∏–ø –º–∞—Ä—à—Ä—É—Ç—É ‚Äî —Ä–µ–Ω–¥–µ—Ä–∏–º–æ –±–µ–π–¥–∂ */}
        {params.numberType !== "none" && (
          <g transform={`translate(${PathConfigs.bicycle.width * bicycleScale + 30}, 0)`}>
            {/* === [6.2.1] –ö–û–õ–û –¥–ª—è –Ω–∞—Ü. –º–∞—Ä—à—Ä—É—Ç—É === */}
            {params.numberType === "national" ? (
              <CircleRenderer
                config={circleBadge}
                outerColor={colors.routeBox.frame}
                innerColor={colors.routeBox.background}
                cx={circleBadge.outerRadius}
                cy={100}
              />
            ) : (
              // === [6.2.2] –ü–†–Ø–ú–û–ö–£–¢–ù–ò–ö –¥–ª—è —Ä–µ—à—Ç–∏ —Ç–∏–ø—ñ–≤ ===
              <RectRenderer
                config={rectBadge}
                outerColor={colors.routeBox.frame}
                innerColor={colors.routeBox.background}
                x={0}
                y={100 - rectBadge.outerHeight / 2 + 5}
              />
            )}

            {/* === [6.2.3] –ù–û–ú–ï–† –ú–ê–†–®–†–£–¢–£ –£–°–ï–†–ï–î–ò–ù–Ü –ë–ï–ô–î–ñ–ê === */}
            <text
              x={
                params.numberType === "national"
                  ? circleBadge.outerRadius
                  : rectBadge.outerWidth / 2
              }
              y={
                params.numberType === "national"
                  ? 105
                  : 110
              }
              fill={colors.routeBox.text}
              fontSize={
                (params.numberType === "national" ? 38 : 41) / 0.7
              }
              fontFamily="RoadUA-Bold"
              textAnchor="middle"
              dominantBaseline="middle"
              style={{ fontFeatureSettings: '"ss02"' }}
            >
              {params.routeNumber}
            </text>
          </g>
        )}
      </g>
    </>
  );
}

export default B4B7Header;

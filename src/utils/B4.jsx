import RectRenderer from "./RectRenderer"; // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫—ñ–≤ (—Ä–∞–º–∫–∏, —Ñ–æ–Ω)
import CircleRenderer from "./CircleRenderer"; // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∫–æ–ª–∞ (–Ω–∞—Ü. –º–∞—Ä—à—Ä—É—Ç)
import B4Item from "./B4Item"; // –û–¥–∏–Ω –Ω–∞–ø—Ä—è–º–æ–∫ B4
import RectConfigs from "../config/RectConfigs"; // –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫—ñ–≤
import PathConfigs from "../config/PathConfigs"; // –®–ª—è—Ö–∏ (SVG path) –¥–æ —ñ–∫–æ–Ω–æ–∫
import CircleConfigs from "../config/CircleConfigs"; // –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –∫—ñ–ª
import { ColorMap } from "../config/ColorMap"; // –ú–∞–ø–∞ –∫–æ–ª—å–æ—Ä—ñ–≤ (–ø–æ —Ç–∏–ø—É —Ç–∞–±–ª–∏—Ü—ñ/–º–∞—Ä—à—Ä—É—Ç—É)

/**
 * üì¶ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –ø–æ–±—É–¥–æ–≤–∏ —Ç–∞–±–ª–∏—á–∫–∏ B4 –∑ –∫—ñ–ª—å–∫–æ–º–∞ –Ω–∞–ø—Ä—è–º–∫–∞–º–∏.
 */
function B4({ params }) {
  // --- 1. –ö–û–õ–¨–û–†–ò ---

  // –û—Ç—Ä–∏–º—É—î–º–æ –∫–æ–ª—ñ—Ä —Ñ–æ–Ω—É —Ç–∞ —Ç–µ–∫—Å—Ç—É —Ç–∞–±–ª–∏—Ü—ñ
  const { table, number } = ColorMap;
  const { bg: tableBackground, fg: tableForeground } = table[params.tableType];

  // –û—Ç—Ä–∏–º—É—î–º–æ –∫–æ–ª—å–æ—Ä–∏ –¥–ª—è –±–µ–π–¥–∂–∞ –∑ –Ω–æ–º–µ—Ä–æ–º –º–∞—Ä—à—Ä—É—Ç—É
  const { bg: badgeBackground, text: defaultTextColor } = number[params.numberType] || {};

  // –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É: —è–∫—â–æ —Å–µ–∑–æ–Ω–Ω–∞ —Ç–∞–±–ª–∏—á–∫–∞ ‚Äî —Ñ—ñ–∫—Å–æ–≤–∞–Ω–∏–π –∂–æ–≤—Ç–∏–π, —ñ–Ω–∞–∫—à–µ ‚Äî –∑—ñ —Å–ª–æ–≤–Ω–∏–∫–∞
  const textColor = params.tableType === "seasonal" ? "#F5C30D" : defaultTextColor || "#000000";

  // --- 2. –ö–û–ù–§–Ü–ì–£–†–ê–¶–Ü–Ø –ú–ê–†–®–†–£–¢–ù–û–ì–û –ë–ï–ô–î–ñ–ê ---

  // –ë–µ–π–¥–∂ —É –≤–∏–≥–ª—è–¥—ñ –∫—Ä—É–≥–∞ –¥–ª—è –Ω–∞—Ü. –º–∞—Ä—à—Ä—É—Ç—É
  const circleBadge = CircleConfigs["E5B4"];

  // –Ø–∫—â–æ –Ω–æ–º–µ—Ä –º–∞—Ä—à—Ä—É—Ç—É ‚â• 10 ‚Äî –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –±—ñ–ª—å—à–∏–π –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫
  const isDoubleDigit = +params.routeNumber >= 10;
  const rectBadge = isDoubleDigit ? RectConfigs["E4B4"] : RectConfigs["E3B4"];

  // --- 3. –ö–û–ù–§–Ü–ì–£–†–ê–¶–Ü–Ø –†–û–ó–ú–Ü–†–£ –í–°–Ü–Ñ–á –¢–ê–ë–õ–ò–ß–ö–ò ---

  // –ö—ñ–ª—å–∫—ñ—Å—Ç—å –Ω–∞–ø—Ä—è–º–∫—ñ–≤ (1‚Äì3)
  const count = params.b4Items?.length || 1;

  // –û—Ç—Ä–∏–º—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫ (—Ä–∞–º–∫–∞) –∑–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é –Ω–∞–ø—Ä—è–º–∫—ñ–≤
  const outerRect = RectConfigs[`B${count + 3}`];
  const innerRect = RectConfigs[`strokeB${count + 3}`];

  // –Ø–∫—â–æ —Ç–∞–±–ª–∏—Ü—è —Ç–∏–º—á–∞—Å–æ–≤–∞ ‚Äî –ø–æ—Ç—Ä—ñ–±–Ω–æ –º–∞–ª—é–≤–∞—Ç–∏ —á–æ—Ä–Ω—É –ª—ñ–Ω—ñ—é –∑–≤–µ—Ä—Ö—É
  const showBlackLine = params.tableType === "temporary";

  // --- 4. –†–û–ó–ú–Ü–©–ï–ù–ù–Ø –Ü–ö–û–ù–ö–ò –í–ï–õ–û–°–ò–ü–ï–î–ê + –ú–ê–†–®–†–£–¢ ---

  // –ú–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è —ñ–∫–æ–Ω–∫–∏ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞ –ø—ñ–¥ —Ä–æ–∑–º—ñ—Ä —Ç–∞–±–ª–∏—Ü—ñ
  const bicycleScale = 86 / PathConfigs.bicycle.height;

  // –®–∏—Ä–∏–Ω–∞ –±–µ–π–¥–∂–∞ –º–∞—Ä—à—Ä—É—Ç—É (0 ‚Äî —è–∫—â–æ "none")
  const badgeWidth =
    params.numberType === "none"
      ? 0
      : params.numberType === "national"
      ? circleBadge.outerRadius * 2
      : rectBadge.outerWidth;

  // –¶–µ–Ω—Ç—Ä—É—î–º–æ –±–ª–æ–∫ (–≤–µ–ª–æ—Å–∏–ø–µ–¥ + –±–µ–π–¥–∂) –ø–æ —Ü–µ–Ω—Ç—Ä—É —Ç–∞–±–ª–∏—Ü—ñ (—à–∏—Ä–∏–Ω–∞ 600 ‚Üí —Ü–µ–Ω—Ç—Ä 300)
  const groupX =
    300 -
    (PathConfigs.bicycle.width * bicycleScale +
      (params.numberType !== "none" ? 30 + badgeWidth : 0)) / 2;

  // --- 5. –†–û–ó–¢–ê–®–£–í–ê–ù–ù–Ø –ï–õ–ï–ú–ï–ù–¢–Ü–í B4Item ---

  /**
   * –û–±—á–∏—Å–ª—é—î Y-–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ B4Item
   * @param index - –Ω–æ–º–µ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞ (0, 1, 2)
   */
  const b4ItemY = (index) => 200 + index * 150;

  // --- 6. –†–ï–ù–î–ï–† –†–û–ó–î–Ü–õ–¨–ù–ò–• –õ–Ü–ù–Ü–ô –ú–Ü–ñ –ù–ê–ü–†–Ø–ú–ö–ê–ú–ò ---

  /**
   * –†–µ–Ω–¥–µ—Ä–∏—Ç—å —á–æ—Ä–Ω—ñ –ª—ñ–Ω—ñ—ó –º—ñ–∂ –Ω–∞–ø—Ä—è–º–∫–∞–º–∏, —è–∫—â–æ —ó—Ö —Å—Ç—Ä—ñ–ª–∫–∏ —Ä—ñ–∑–Ω—ñ
   */
  const renderSeparatorLines = () => {
    const lines = [];

    for (let i = 1; i < params.b4Items.length; i++) {
      const prev = params.b4Items[i - 1];
      const curr = params.b4Items[i];

      if (prev.direction !== curr.direction) {
        const y = b4ItemY(i) - 3; // –ó–º—ñ—â–µ–Ω–Ω—è –≤–≥–æ—Ä—É –ø–µ—Ä–µ–¥ –Ω–æ–≤–∏–º –±–ª–æ–∫–æ–º
        lines.push(
          <rect key={`line-${i}`} x={10} y={y} width={580} height={6} fill={"#000000"} />
        );
      }
    }

    return lines;
  };

  // --- 7. –†–ï–ù–î–ï–† SVG ---

  return (
    <svg
      width={outerRect.outerWidth + 2}
      height={outerRect.outerHeight + 2}
      xmlns="http://www.w3.org/2000/svg"
    >
      {/* –ó–∞–≥–∞–ª—å–Ω–∞ –≥—Ä—É–ø–∞ –∑ –Ω–µ–≤–µ–ª–∏–∫–∏–º –∑–º—ñ—â–µ–Ω–Ω—è–º —Ç–∞ —Ç—ñ–Ω–Ω—é */}
      <g transform="translate(1,1)" style={{ filter: "drop-shadow(0 0 1px black)" }}>
        {/* –ó–æ–≤–Ω—ñ—à–Ω—è –±—ñ–ª–∞ —Ä–∞–º–∫–∞ */}
        <RectRenderer
          config={outerRect}
          outerColor={"#FFFFFF"}
          innerColor={"#FFFFFF"}
          x={0}
          y={0}
        />

        {/* –í–Ω—É—Ç—Ä—ñ—à–Ω—è —á–æ—Ä–Ω–∞ —Ä–∞–º–∫–∞ */}
        <RectRenderer
          config={innerRect}
          outerColor={"#000000"}
          innerColor={"#FFFFFF"}
          x={7}
          y={7}
        />

        {/* –í–µ—Ä—Ö–Ω—ñ–π –∑–∞–æ–∫—Ä—É–≥–ª–µ–Ω–∏–π –±–ª–æ–∫ –∑ —Ñ–æ–Ω–æ–º */}
        <path
          d={PathConfigs.topRoundedOuterRect.d}
          fill={params.tableType === "seasonal" ? "#FFFFFF" : tableBackground}
        />
        <path d={PathConfigs.topRoundedInnerRect.d} fill={tableForeground} />

        {/* --- –í–ï–õ–û–°–ò–ü–ï–î + –ë–ï–ô–î–ñ –ú–ê–†–®–†–£–¢–£ --- */}
        <g transform={`translate(${groupX}, 5)`}>
          {/* –Ü–∫–æ–Ω–∫–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–∞ */}
          <path
            d={PathConfigs.bicycle.d}
            fill={tableBackground}
            fillRule="evenodd"
            transform={`translate(0, ${
              100 - (PathConfigs.bicycle.height * bicycleScale) / 2
            }) scale(${bicycleScale})`}
          />

          {/* –ë–µ–π–¥–∂ –º–∞—Ä—à—Ä—É—Ç—É (–∫–æ–ª–æ –∞–±–æ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫ + –Ω–æ–º–µ—Ä) */}
          {params.numberType !== "none" && (
            <g transform={`translate(${PathConfigs.bicycle.width * bicycleScale + 30}, 0)`}>
              {/* –ù–∞—Ü. –º–∞—Ä—à—Ä—É—Ç = –∫–æ–ª–æ */}
              {params.numberType === "national" ? (
                <CircleRenderer
                  config={circleBadge}
                  outerColor={tableBackground}
                  innerColor={badgeBackground}
                  cx={circleBadge.outerRadius}
                  cy={100}
                />
              ) : (
                // –Ü–Ω—à—ñ —Ç–∏–ø–∏ = –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫
                <RectRenderer
                  config={rectBadge}
                  outerColor={tableBackground}
                  innerColor={badgeBackground}
                  x={0}
                  y={100 - rectBadge.outerHeight / 2 + 5}
                />
              )}

              {/* –¢–µ–∫—Å—Ç –Ω–æ–º–µ—Ä–∞ –º–∞—Ä—à—Ä—É—Ç—É –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ –±–µ–π–¥–∂–∞ */}
              <text
                x={
                  params.numberType === "national"
                    ? circleBadge.outerRadius
                    : rectBadge.outerWidth / 2
                }
                y={params.numberType === "national" ? 105 : 110}
                fill={textColor}
                fontSize={(params.numberType === "national" ? 38 : 41) / 0.7}
                fontFamily="RoadUA-Bold"
                textAnchor="middle"
                dominantBaseline="middle"
                style={{ fontFeatureSettings: '"ss02"' }}
              >
                {params.routeNumber}
              </text>
            </g>
          )}
        </g>

        {/* --- –ù–ê–ü–†–Ø–ú–ö–ò B4Item --- */}
        {params.b4Items?.map((itemParams, index) => {
          const prev = index > 0 ? params.b4Items[index - 1] : null;

          // –Ø–∫—â–æ –Ω–∞–ø—Ä—è–º–æ–∫ —Ç–∞–∫–∏–π —Å–∞–º–∏–π —è–∫ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π ‚Äî –Ω–µ –º–∞–ª—é—î–º–æ —Å—Ç—Ä—ñ–ª–∫—É
          const hideArrow = prev && prev.direction === itemParams.direction;

          return (
            <B4Item
              key={index}
              params={{ ...params, ...itemParams, hideArrow }}
              x={0}
              y={b4ItemY(index)}
              onTooLong={(val) => updateTooLongFlag(index, val)} // (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
            />
          );
        })}

        {/* --- –ß–û–†–ù–Ü –õ–Ü–ù–Ü–á –ú–Ü–ñ –†–Ü–ó–ù–ò–ú–ò –°–¢–†–Ü–õ–ö–ê–ú–ò --- */}
        {renderSeparatorLines()}

        {/* --- –ß–û–†–ù–ê –°–ú–£–ì–ê –ü–Ü–î –í–ï–õ–û–ë–õ–û–ö–û–ú (—Ç—ñ–ª—å–∫–∏ –¥–ª—è —Ç–∏–ø—É "temporary") --- */}
        {showBlackLine && (
          <rect x={10} y={197} width={580} height={6} fill={"#000000"} />
        )}
      </g>
    </svg>
  );
}

export default B4;
